<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2009 (http://www.altova.com) by Philipp Marx (Adobe Systems, Inc.) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:element name="ExtensionManifest">
		<xs:annotation>
			<xs:documentation>ExtensionManifest for CSXS extensions.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Author" type="OptionalString" minOccurs="0">
					<xs:annotation>
						<xs:documentation>An optional author of this ExtensionBundle.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="Contact" minOccurs="0">
					<xs:annotation>
						<xs:documentation>An optional contact for this ExtensionBundle.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="OptionalString">
								<xs:attribute name="mailto" type="RequiredString" use="optional">
									<xs:annotation>
										<xs:documentation>An optional contact mail.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="Legal" minOccurs="0">
					<xs:annotation>
						<xs:documentation>An optional legal notice for this ExtensionBundle.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="OptionalString">
								<xs:attribute name="href" type="xs:anyURI" use="optional">
									<xs:annotation>
										<xs:documentation>A link to a legal site.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="Abstract" minOccurs="0">
					<xs:annotation>
						<xs:documentation>An optional abstract for this ExtensionBundle.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="OptionalString">
								<xs:attribute name="href" type="xs:anyURI" use="optional">
									<xs:annotation>
										<xs:documentation>A link to an abstract site.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="ExtensionList">
					<xs:annotation>
						<xs:documentation>Contains a list of extensions defined in this ExtensionManifest.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Extension" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Declaration of an extension specified in this ExtensionManifest. There can be an arbitrary number of extension specified. </xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:attribute name="Id" type="ID" use="required">
										<xs:annotation>
											<xs:documentation>The id of the specific extension. This id has to be unique within the whole CSXS system. Recommendation is to use reverse domain names. This id is used within the ExtensionManifest as reference in other tags.</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="Version" type="Version" use="optional">
										<xs:annotation>
											<xs:documentation>The version of the specific extension.</xs:documentation>
										</xs:annotation>
									</xs:attribute>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="ExecutionEnvironment">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="HostList" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Contains a list of all supported hosts.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Host" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>The host defines a supported product.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:attribute name="Name" type="RequiredString" use="required">
													<xs:annotation>
														<xs:documentation>The name must be the enigma code of the supported point product.</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="Version" type="RangedVersion" use="required">
													<xs:annotation>
														<xs:documentation>A version range for this host. See the RangedVersion type for information. </xs:documentation>
													</xs:annotation>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="LocaleList" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Contains a list for all supported locales.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Locale" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Contains an entry for a supported code. The code must be given in the form xx_XX or as All to specify that all locales are supported.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:attribute name="Code" type="RequiredString" use="required">
													<xs:annotation>
														<xs:documentation>The language code in the form xx_XX or All.</xs:documentation>
													</xs:annotation>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="RequiredRuntimeList" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Contains a list for all required runtimes. The absence for any runtime implies no requirement.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="RequiredRuntime" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Specifies runtimes which must be available in order for the extension to run. Supported runtimes which can be checked CSXS.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:attribute name="Name" use="required">
													<xs:annotation>
														<xs:documentation>Name of the runtime.</xs:documentation>
													</xs:annotation>
													<xs:simpleType>
														<xs:restriction base="xs:string">
															<xs:pattern value="CSXS"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:attribute>
												<xs:attribute name="Version" type="RangedVersion" use="required">
													<xs:annotation>
														<xs:documentation>A version range for this runtime. See the RangedVersion type for information. </xs:documentation>
													</xs:annotation>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="DispatchInfoList">
					<xs:annotation>
						<xs:documentation>Contains a list for every extension's attributes.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Extension" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Declaration of the extension for which the following list of DispatchInfos is declared.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="DispatchInfo" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>A DispatchInfo contains all parameter which are needed to run an extension. A DispatchInfo can have an optional attribute "Host" to define specific attributes per "Host". If an DispatchInfo has no "Host" it will act as a default for all values which are not set in a specific Host-DispatchInfo.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element name="Resources" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The Resources tag contains all resources (source files) to run the extension.</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:sequence>
																<xs:element name="SwfPath" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>The SwfPath contains the path to the extension's swf file. The path has to be relative to the extensions root directory and start with a "./". Use "/" as path delimiter.</xs:documentation>
																	</xs:annotation>
																	<xs:complexType>
																		<xs:attribute name="linkType" type="RequiredString" use="optional">
																			<xs:annotation>
																				<xs:documentation>The linkage used for this SWF. 0 is relative, 1 is an application in the same project, and 2 is an application in another project.</xs:documentation>
																			</xs:annotation>
																		</xs:attribute>
																		<xs:attribute name="appPath" type="RequiredString" use="optional">
																			<xs:annotation>
																				<xs:documentation>The application in the same project to target.</xs:documentation>
																			</xs:annotation>
																		</xs:attribute>
																		<xs:attribute name="projectAppPath" type="RequiredString" use="optional">
																			<xs:annotation>
																				<xs:documentation>The target application in another project.</xs:documentation>
																			</xs:annotation>
																		</xs:attribute>
																		<xs:attribute name="project" type="RequiredString" use="optional">
																			<xs:annotation>
																				<xs:documentation>The project containing the SWF to link.</xs:documentation>
																			</xs:annotation>
																		</xs:attribute>
																	</xs:complexType>
																</xs:element>
																<xs:element name="ScriptPath" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>The ScriptPath contains the path to the extension's script file. The path has to be relative to the extensions root directory and start with a "./". Use "/" as path delimiter.</xs:documentation>
																	</xs:annotation>
																	<xs:complexType>
																		<xs:simpleContent>
																			<xs:extension base="RelativePath">
																				<xs:attribute name="Engine" type="RequiredString" use="optional">
																					<xs:annotation>
																						<xs:documentation>This defines an optional ID for the ExtendsScript engine. This can be used to run different scripts in the same engine.</xs:documentation>
																					</xs:annotation>
																				</xs:attribute>
																			</xs:extension>
																		</xs:simpleContent>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
													<xs:element name="Lifecycle" minOccurs="0">
														<xs:annotation>
															<xs:documentation>In the Lifecycle the extension can specify its desired behavior regarding startup and shutdown.</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:sequence>
																<xs:element name="AutoVisible" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>This flag controls whether the extension's UI should be made visible automatically when started or if the extension wants to control this itself. </xs:documentation>
																	</xs:annotation>
																	<xs:simpleType>
																		<xs:restriction base="xs:string">
																			<xs:enumeration value="true"/>
																			<xs:enumeration value="false"/>
																		</xs:restriction>
																	</xs:simpleType>
																</xs:element>
																<xs:element name="StartOn" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>With StartOn the extension can define different ways to start itself.</xs:documentation>
																	</xs:annotation>
																	<xs:complexType>
																		<xs:sequence>
																			<xs:element name="Event" minOccurs="0" maxOccurs="unbounded">
																				<xs:annotation>
																					<xs:documentation>Specifies zero or more events on which the extension should be started. The name of the event has to be the fully qualified event id.</xs:documentation>
																				</xs:annotation>
																				<xs:complexType>
																					<xs:simpleContent>
																						<xs:extension base="RequiredString"/>
																					</xs:simpleContent>
																				</xs:complexType>
																			</xs:element>
																		</xs:sequence>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
													<xs:element name="UI" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Defines UI related properties of the extension.</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:sequence>
																<xs:element name="Type" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>Specifies the type of the extension. Note that the "Custom" type means that it is up to the point product to decide how this extension will be handled.</xs:documentation>
																	</xs:annotation>
																	<xs:simpleType>
																		<xs:restriction base="xs:string">
																			<xs:enumeration value="Panel"/>
																			<xs:enumeration value="ModalDialog"/>
																			<xs:enumeration value="Modeless"/>
																			<xs:enumeration value="Tooltip"/>
																			<xs:enumeration value="Custom"/>
																		</xs:restriction>
																	</xs:simpleType>
																</xs:element>
																<xs:element name="Menu" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>Specifies the name for the menu entry.</xs:documentation>
																	</xs:annotation>
																	<xs:complexType>
																		<xs:simpleContent>
																			<xs:extension base="xs:string">
																				<xs:attribute name="Placement" type="RequiredString" use="optional">
																					<xs:annotation>
																						<xs:documentation>A special placement which doesn't have to be honored by the point products.</xs:documentation>
																					</xs:annotation>
																				</xs:attribute>
																			</xs:extension>
																		</xs:simpleContent>
																	</xs:complexType>
																</xs:element>
																<xs:element name="Geometry" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>Specifies the geometry of the extension. Please note that all elements are onle "preferred" values. Some point products will not support all of these values. These values can be overwritten by an AIR extension through the AIR window API.</xs:documentation>
																	</xs:annotation>
																	<xs:complexType>
																		<xs:sequence>
																			<xs:element name="Size" minOccurs="0">
																				<xs:annotation>
																					<xs:documentation>If values are provided here both have to be specified. Note that those values can be scattered over different DispatchInfos.</xs:documentation>
																				</xs:annotation>
																				<xs:complexType>
																					<xs:sequence>
																						<xs:element name="Height" type="RequiredString" minOccurs="0">
																							<xs:annotation>
																								<xs:documentation>The height. If not provided this will default to the system default or any value set in the AIR API.</xs:documentation>
																							</xs:annotation>
																						</xs:element>
																						<xs:element name="Width" type="RequiredString" minOccurs="0">
																							<xs:annotation>
																								<xs:documentation>The width. If not provided this will default to the system default or any value set in the AIR API.</xs:documentation>
																							</xs:annotation>
																						</xs:element>
																					</xs:sequence>
																				</xs:complexType>
																			</xs:element>
																			<xs:element name="MaxSize" minOccurs="0">
																				<xs:annotation>
																					<xs:documentation>If values are provided here both have to be specified. Note that those values can be scattered over different DispatchInfos.</xs:documentation>
																				</xs:annotation>
																				<xs:complexType>
																					<xs:sequence>
																						<xs:element name="Height" type="RequiredString" minOccurs="0">
																							<xs:annotation>
																								<xs:documentation>The height. If not provided this will default to the system default or any value set in the AIR API.</xs:documentation>
																							</xs:annotation>
																						</xs:element>
																						<xs:element name="Width" type="RequiredString" minOccurs="0">
																							<xs:annotation>
																								<xs:documentation>The width. If not provided this will default to the system default or any value set in the AIR API.</xs:documentation>
																							</xs:annotation>
																						</xs:element>
																					</xs:sequence>
																				</xs:complexType>
																			</xs:element>
																			<xs:element name="MinSize" minOccurs="0">
																				<xs:annotation>
																					<xs:documentation>If values are provided here both have to be specified. Note that those values can be scattered over different DispatchInfos.</xs:documentation>
																				</xs:annotation>
																				<xs:complexType>
																					<xs:sequence>
																						<xs:element name="Height" type="RequiredString" minOccurs="0">
																							<xs:annotation>
																								<xs:documentation>The height. If not provided this will default to the system default or any value set in the AIR API.</xs:documentation>
																							</xs:annotation>
																						</xs:element>
																						<xs:element name="Width" type="RequiredString" minOccurs="0">
																							<xs:annotation>
																								<xs:documentation>The width. If not provided this will default to the system default or any value set in the AIR API.</xs:documentation>
																							</xs:annotation>
																						</xs:element>
																					</xs:sequence>
																				</xs:complexType>
																			</xs:element>
																		</xs:sequence>
																	</xs:complexType>
																</xs:element>
																<xs:element name="Icons" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>Icons provided for the UI of this extension.</xs:documentation>
																	</xs:annotation>
																	<xs:complexType>
																		<xs:sequence>
																			<xs:element name="Icon" minOccurs="0" maxOccurs="unbounded">
																				<xs:annotation>
																					<xs:documentation>A specific icon for a given type.</xs:documentation>
																				</xs:annotation>
																				<xs:complexType>
																					<xs:simpleContent>
																						<xs:extension base="RelativePath">
																							<xs:attribute name="Type" use="required">
																								<xs:annotation>
																									<xs:documentation>The type of the icon.</xs:documentation>
																								</xs:annotation>
																								<xs:simpleType>
																									<xs:restriction base="xs:string">
																										<xs:enumeration value="Normal"/>
																										<xs:enumeration value="Disabled"/>
																										<xs:enumeration value="RollOver"/>
																									</xs:restriction>
																								</xs:simpleType>
																							</xs:attribute>
																						</xs:extension>
																					</xs:simpleContent>
																				</xs:complexType>
																			</xs:element>
																		</xs:sequence>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
													<xs:element name="ExtensionData" minOccurs="0">
														<xs:annotation>
															<xs:documentation>This section contains arbitrary information about this extension.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:any processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
												<xs:attribute name="Host" type="RequiredString" use="optional"/>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
									<xs:attribute name="Id" type="ID" use="required">
										<xs:annotation>
											<xs:documentation>The id of the extension. This must refer to an extension defined in /ExtensionManifest/ExtensionList/Extension.</xs:documentation>
										</xs:annotation>
									</xs:attribute>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="Version" use="required">
				<xs:annotation>
					<xs:documentation>The version of this ExtensionManifest.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="2.0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="ExtensionBundleId" type="ID" use="required">
				<xs:annotation>
					<xs:documentation>The Id for all extensions included in this ExtensionManifest.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="ExtensionBundleVersion" type="Version" use="required">
				<xs:annotation>
					<xs:documentation>The version of this ExtensionBundle.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="ID">
		<xs:annotation>
			<xs:documentation>An ID.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="RequiredString">
			<xs:pattern value="[A-Za-z0-9._\-]+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Version">
		<xs:annotation>
			<xs:documentation>A version consists of major.minor.macro.special. major, minor, macro must be numbers and special can be any string (version parts can have up to 9 digets). At least the major has to be specified, all other elements are optional. When it comes to comparing versions the special discriminator will be compared based on UTF-8 encoding.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="\d{1,9}(\.\d{1,9}(\.\d{1,9}(\.(\w|_|-)+)?)?)?"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="RangedVersion">
		<xs:annotation>
			<xs:documentation>A ranged version defines at least a minimum version and optionally a major version. If only one version is specified it is taken as minum version with no special maximum version. With "[","]", "(" and ")" inclusive and exclusive ranges can be specified (see definition of version for further information).</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="(\d{1,9}(\.\d{1,9}(\.\d{1,9}(\.(\w|_|-)+)?)?)?)|([(\[]\d{1,9}(\.\d{1,9}(\.\d{1,9}(\..+)?)?)?,?\d{1,9}(\.\d{1,9}(\.\d{1,9}(\.(\w|_|-)+)?)?)?[)\]])"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="RelativePath">
		<xs:annotation>
			<xs:documentation>A relative path always has to start with ./ and points to a resource relative to the extension bundle's root.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="\./.+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="RequiredString">
		<xs:annotation>
			<xs:documentation>A string with at least one element.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="OptionalString">
		<xs:annotation>
			<xs:documentation>An optional string.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
</xs:schema>
